Decode the following hexademical values to instructions:



1)0x98765437      0x98765437 = 1001 1000 0111 0110 0101 0100 0011 0111
  opcode - 0110111 (last 7 bits) operation matching our opcode is lui => U-type instraction
  next five bits from the end is rd = 01000 => s0 .Last 20 bits is immediate 0x98765
  
  result:       lui s0,0x98765

2)0x00744433      0x00744433 = 0000 0000 0111 0100 0100 0100 0011 0011
  opcode - 0110011, instruction type  matching our opcode is R-type
  rd = 01000 -> s0, func3 = 100 , rs1 = 01000 => s0, rs2 = 00111 => t2, func7 = 0000000
  
  result : xor s0, s0, t2 
  
3)0x0080006f      0x0080006f = 0000 0000 1000 0000 0000 0000 0110 1111
  opcode - 1101111, matching instruction is jal => UJ-type instraction
  rd = 00000 => zero, immediate is 0x8
  
  result :  jal zero, 0x8
  
4)0xfff37293      0xfff37293 = 1111 1111 1111 0011 0111 0010 1001 0011
  opcode - 0010011, uncertain between R and I type, so look func3 = 111 => I-type and operation andi
  rd = 00101 => t0, rs1 = 00110 => t1, immediate = 111111111111 = 0xfff
  
  result:   andi t0, t1, 0xfff

5)0x00000463      0x00000463 = 0000 0000 0000 0000 0000 0100 0110 0011
  opcode - 1100011 => SB-type, func3 = 000 => beq instruction
  rs1 = 00000,rs2 = 00000 => zero, Immediate = 0x8
  
  result: beq zero, zero, 0x8
  
6)0x00032823      0x00032823 = 0000 0000 0000 0011 0010 1000 0010 0011
  opcode - 0100011, matching instruction is S-type.
  func3 = 010 => sw instruction, rs1 = 00110 => t1, rs2 = 00000 = zero
  immediate is 0000 0001 0000 = 0x10
  
  result: sw t1, 0x10(zero)
